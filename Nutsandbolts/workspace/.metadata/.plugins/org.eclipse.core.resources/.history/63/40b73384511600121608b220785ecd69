package com.caveofprogramming.android.notesquirrel;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

public class MainActivity extends Activity {

	public static final String DEBUGTAG = "JWP";
	public static final String TEXTFILE = "notesquirrel.txt";
	public static final String FILESAVED = "FileSaved";
	public static final String RESET_PASSPOINTS = "ResetPasspoints";

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		addSaveButtonListener();
		addLockButtonListener();

		SharedPreferences prefs = getPreferences(MODE_PRIVATE);
		boolean fileSaved = prefs.getBoolean(FILESAVED, false);

		if (fileSaved) {
			loadSavedFile();
		}
	}
	
	@Override
	public boolean onMenuItemSelected(int featureId, MenuItem item) {
		
		switch(item.getItemId()) {
		case R.id.menu_passpoints_reset:
			Intent i = new Intent(this, ImageActivity.class);
			i.putExtra(RESET_PASSPOINTS, true);
			startActivity(i);
			return true;
		case R.id.menu_replace_image:
			replaceImage();
			return true;
		default:
			return super.onMenuItemSelected(featureId, item);
		}
	}
	
	private void replaceImage() {
		
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		LayoutInflater li = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		View v = li.inflate(R.layout.temp, null);
		builder.setTitle("Hello");
		builder.setView(v);
		
		AlertDialog dlg = builder.create();
		
		String[] items = {"option 1", "option 2"};
		
		dlg.show();
		
		ListView list = (ListView)dlg.findViewById(R.id.list);
		list.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items));
	}
	

	private void addLockButtonListener() {
		Button lockBtn = (Button) findViewById(R.id.lock);
		
		lockBtn.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				Log.d(DEBUGTAG, "start image activity");
				startActivity(new Intent(MainActivity.this, ImageActivity.class));
			}
		});
	}

	private void loadSavedFile() {
		try {

			FileInputStream fis = openFileInput(TEXTFILE);

			BufferedReader reader = new BufferedReader(new InputStreamReader(
					new DataInputStream(fis)));

			EditText editText = (EditText) findViewById(R.id.text);

			String line;

			while ((line = reader.readLine()) != null) {
				editText.append(line);
				editText.append("\n");
			}

			fis.close();
		} catch (Exception e) {
			Toast.makeText(MainActivity.this, getString(R.string.toast_cant_load), Toast.LENGTH_LONG).show();
		}
	}


	private void addSaveButtonListener() {
		Button saveBtn = (Button) findViewById(R.id.save);

		saveBtn.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {

				EditText editText = (EditText) findViewById(R.id.text);

				String text = editText.getText().toString();

				try {
					FileOutputStream fos = openFileOutput(TEXTFILE,
							Context.MODE_PRIVATE);
					fos.write(text.getBytes());
					fos.close();

					SharedPreferences prefs = getPreferences(MODE_PRIVATE);
					SharedPreferences.Editor editor = prefs.edit();
					editor.putBoolean(FILESAVED, true);
					editor.commit();
				} catch (Exception e) {
					Toast.makeText(MainActivity.this, getString(R.string.toast_cant_save), Toast.LENGTH_LONG).show();
				}
			}
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}
}
